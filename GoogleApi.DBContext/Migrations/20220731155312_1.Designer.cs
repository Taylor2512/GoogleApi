// <auto-generated />
using System;
using GoogleApi.DBContext.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoogleApi.DBContext.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220731155312_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.address_components", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("long_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("short_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("address_components");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.address_components_and_GoogleAdressType", b =>
                {
                    b.Property<int>("Id_GoogleAdress_types")
                        .HasColumnType("int");

                    b.Property<Guid>("Id_address_components")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id_GoogleAdress_types", "Id_address_components");

                    b.HasIndex("Id_address_components");

                    b.ToTable("tbl_address_components_and_GoogleAdressType", (string)null);
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.bounds", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_northeast")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_southwest")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id_northeast")
                        .IsUnique();

                    b.HasIndex("Id_southwest")
                        .IsUnique();

                    b.ToTable("tbl_bounds", (string)null);
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.Cordenadas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Longitud")
                        .IsUnicode(true)
                        .HasColumnType("float");

                    b.Property<double>("latitud")
                        .IsUnicode(true)
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("tbl_cordenada", (string)null);
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.geometry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_bounds")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_location")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Id_location_type")
                        .HasColumnType("int");

                    b.Property<Guid>("Id_viewport")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id_bounds")
                        .IsUnique();

                    b.HasIndex("Id_location")
                        .IsUnique();

                    b.HasIndex("Id_location_type");

                    b.HasIndex("Id_viewport")
                        .IsUnique();

                    b.ToTable("tbl_geometry", (string)null);
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.GobalAdress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_plus_code")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id_plus_code")
                        .IsUnique();

                    b.ToTable("tbl_GobalAdress", (string)null);
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_GobalAdress")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_geometry")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_plus_code")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("formatted_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("place_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_GobalAdress");

                    b.HasIndex("Id_geometry")
                        .IsUnique();

                    b.HasIndex("Id_plus_code")
                        .IsUnique();

                    b.ToTable("tbl_google_adress", (string)null);
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress_and_address_components", b =>
                {
                    b.Property<Guid>("Id_GoogleAdress")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_address_components")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id_GoogleAdress", "Id_address_components");

                    b.HasIndex("Id_address_components");

                    b.ToTable("tbl_GoogleAdress_and_address_components", (string)null);
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress_tiene_types", b =>
                {
                    b.Property<Guid>("Id_GoogleAdress")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Id_GoogleAdress_types")
                        .HasColumnType("int");

                    b.HasKey("Id_GoogleAdress", "Id_GoogleAdress_types");

                    b.HasIndex("Id_GoogleAdress_types");

                    b.ToTable("tbl_google_adress_tiene_types", (string)null);
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress_types", b =>
                {
                    b.Property<int>("Id_GoogleAdress_types")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_GoogleAdress_types"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_GoogleAdress_types");

                    b.ToTable("GoogleAdress_types");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.location_type", b =>
                {
                    b.Property<int>("Id_location_type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_location_type"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_location_type");

                    b.ToTable("location_type");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.plus_code", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("compound_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("global_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("plus_code");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.address_components_and_GoogleAdressType", b =>
                {
                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress_types", "GoogleAdress_types")
                        .WithMany("address_components_and_GoogleAdressType")
                        .HasForeignKey("Id_GoogleAdress_types")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.address_components", "address_components")
                        .WithMany("types")
                        .HasForeignKey("Id_address_components")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GoogleAdress_types");

                    b.Navigation("address_components");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.bounds", b =>
                {
                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.Cordenadas", "northeast")
                        .WithOne("northeast")
                        .HasForeignKey("GoogleApi.Domain.Entities.Geoglobal.bounds", "Id_northeast")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_tbl_bounds_tbl_cordenada");

                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.Cordenadas", "southwest")
                        .WithOne("southwest")
                        .HasForeignKey("GoogleApi.Domain.Entities.Geoglobal.bounds", "Id_southwest")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_tbl_bounds_tbl_southwest2");

                    b.Navigation("northeast");

                    b.Navigation("southwest");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.geometry", b =>
                {
                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.bounds", "bounds")
                        .WithOne("geometry")
                        .HasForeignKey("GoogleApi.Domain.Entities.Geoglobal.geometry", "Id_bounds")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.Cordenadas", "location")
                        .WithOne("geometry")
                        .HasForeignKey("GoogleApi.Domain.Entities.Geoglobal.geometry", "Id_location")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.location_type", "location_Type")
                        .WithMany("geometry")
                        .HasForeignKey("Id_location_type")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.bounds", "viewport")
                        .WithOne("viewport")
                        .HasForeignKey("GoogleApi.Domain.Entities.Geoglobal.geometry", "Id_viewport")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("bounds");

                    b.Navigation("location");

                    b.Navigation("location_Type");

                    b.Navigation("viewport");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.GobalAdress", b =>
                {
                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.plus_code", "plus_Code")
                        .WithOne("GobalAdress")
                        .HasForeignKey("GoogleApi.Domain.Entities.Geoglobal.GobalAdress", "Id_plus_code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("plus_Code");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress", b =>
                {
                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.GobalAdress", "GobalAdress")
                        .WithMany("GoogleAdress")
                        .HasForeignKey("Id_GobalAdress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.geometry", "geometry")
                        .WithOne("GoogleAdress")
                        .HasForeignKey("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress", "Id_geometry")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.plus_code", "plus_code")
                        .WithOne("GoogleAdress")
                        .HasForeignKey("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress", "Id_plus_code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GobalAdress");

                    b.Navigation("geometry");

                    b.Navigation("plus_code");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress_and_address_components", b =>
                {
                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress", "GoogleAdress")
                        .WithMany("GoogleAdress_and_address_components")
                        .HasForeignKey("Id_GoogleAdress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.address_components", "address_Components")
                        .WithMany("GoogleAdress_and_address_components")
                        .HasForeignKey("Id_address_components")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GoogleAdress");

                    b.Navigation("address_Components");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress_tiene_types", b =>
                {
                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress", "GoogleAdress")
                        .WithMany("types")
                        .HasForeignKey("Id_GoogleAdress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress_types", "GoogleAdress_types")
                        .WithMany("GoogleAdress_tiene_types")
                        .HasForeignKey("Id_GoogleAdress_types")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GoogleAdress");

                    b.Navigation("GoogleAdress_types");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.address_components", b =>
                {
                    b.Navigation("GoogleAdress_and_address_components");

                    b.Navigation("types");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.bounds", b =>
                {
                    b.Navigation("geometry")
                        .IsRequired();

                    b.Navigation("viewport")
                        .IsRequired();
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.Cordenadas", b =>
                {
                    b.Navigation("geometry")
                        .IsRequired();

                    b.Navigation("northeast")
                        .IsRequired();

                    b.Navigation("southwest")
                        .IsRequired();
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.geometry", b =>
                {
                    b.Navigation("GoogleAdress")
                        .IsRequired();
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.GobalAdress", b =>
                {
                    b.Navigation("GoogleAdress");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress", b =>
                {
                    b.Navigation("GoogleAdress_and_address_components");

                    b.Navigation("types");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.GoogleAdress_types", b =>
                {
                    b.Navigation("GoogleAdress_tiene_types");

                    b.Navigation("address_components_and_GoogleAdressType");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.location_type", b =>
                {
                    b.Navigation("geometry");
                });

            modelBuilder.Entity("GoogleApi.Domain.Entities.Geoglobal.plus_code", b =>
                {
                    b.Navigation("GobalAdress")
                        .IsRequired();

                    b.Navigation("GoogleAdress")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
